pluginManagement {
  repositories {
    gradlePluginPortal() // ensures plugins published to the Gradle Plugin Portal are found
    mavenCentral()       // react-native-gradle-plugin is usually on Maven Central
    google()             // Android artifacts
    // fallback in case your internal artifactory doesn't proxy the plugin:
    maven {
      url = uri("https://maven.pkg.github.com/facebook/react-native")
      // if this repo requires auth in CI, add credentials or prefer mavenCentral()
    }
    // keep your internal artifactory if required:
    // maven { url "http://maven.production.caches.eas-build.internal/artifactory/libs-release" }
  }

  def reactNativeGradlePlugin = new File(
    providers.exec {
      workingDir(rootDir)
      commandLine("node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })")
    }.standardOutput.asText.get().trim()
  ).getParentFile().absolutePath
  includeBuild(reactNativeGradlePlugin)
}

dependencyResolutionManagement {
  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
  repositories {
    google()
    mavenCentral()
    // keep the same fallback here as well:
    maven {
      url = uri("https://maven.pkg.github.com/facebook/react-native")
    }
    // maven { url "https://jitpack.io" } // optional if you need it
    // maven { url "http://maven.production.caches.eas-build.internal/artifactory/libs-release" }
  }
}

rootProject.name = 'WeeklyCalorieTracker'

plugins {
  id("com.facebook.react.settings")
}

apply from: new File(["node", "--print", "require.resolve('expo/package.json')"].execute(null, rootDir).text.trim()).getParent() + "/scripts/autolinking.gradle"

include ':app'
