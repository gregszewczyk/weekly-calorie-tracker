// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  repositories {
    google()
    mavenCentral()
    // fallback for react-native plugin if needed:
    maven {
      url = uri("https://maven.pkg.github.com/facebook/react-native")
      // Note: GitHub Packages may require auth in CI; prefer mavenCentral() when possible.
    }
    // If you must keep the internal artifactory, keep it but add public repos too:
    // maven { url "http://maven.production.caches.eas-build.internal/artifactory/libs-release" }
  }
  dependencies {
    classpath('com.android.tools.build:gradle:8.2.2')
    classpath('com.facebook.react:react-native-gradle-plugin:0.76.9')
    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.22')
  }
}

def reactNativeAndroidDir = new File(
  providers.exec {
    workingDir(rootDir)
    commandLine("node", "--print", "require.resolve('react-native/package.json')")
  }.standardOutput.asText.get().trim(),
  "../android"
)

allprojects {
  repositories {
    maven {
      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
      url(reactNativeAndroidDir)
    }

    google()
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
    
    // Fallback for JFrog artifacts that might be missing from EAS internal cache
    maven { url 'https://oss.jfrog.org/artifactory/oss-release-local' }
    gradlePluginPortal()
  }
  
  // Resolution strategy to handle problematic dependencies
  configurations.all {
    // Simply exclude the problematic JFrog group entirely
    exclude group: 'org.jfrog.buildinfo'
    
    // Force consistent Kotlin versions to prevent API mismatches
    resolutionStrategy.force(
      'org.jetbrains.kotlin:kotlin-stdlib:1.9.22',
      'org.jetbrains.kotlin:kotlin-stdlib-common:1.9.22',
      'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.22'
    )
  }
}

apply plugin: "expo-root-project"
apply plugin: "com.facebook.react.rootproject"
